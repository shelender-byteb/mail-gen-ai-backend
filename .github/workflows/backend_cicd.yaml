name: Build and Push to ECR

on:
    push:
        branches:
            - dev
    
    workflow_dispatch:  

jobs:
    deploy:
        name: Build and Push Docker Image to Amazon ECR
        runs-on: ubuntu-latest
    
        steps:
            # Step 1: Checkout code
            - name: Checkout repository
              uses: actions/checkout@v3

            # Step 2: Install Docker Compose
            - name: Install Docker Compose
              run: |
                sudo curl -L "https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
                docker-compose --version

            # Step 3: Log in to AWS ECR
            - name: Log in to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2
              env:
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

            # Step 4: Create .env File Dynamically
            - name: Create .env File
              run: |
                cat <<EOF > .env

                JWT_SECRET=${{ secrets.JWT_SECRET }}
                ALGORITHM=${{ secrets.ALGORITHM }}
                OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
                EMBEDDINGS_MODEL_NAME=${{ secrets.EMBEDDINGS_MODEL_NAME }}
                PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }}
                PINECONE_KNOWLEDGE_BASE_INDEX=${{ secrets.PINECONE_KNOWLEDGE_BASE_INDEX }}
               
            
                TIME_TO_LIVE_IN_SECONDS=${{ secrets.TIME_TO_LIVE_IN_SECONDS }}
                MAX_SESSIONS=${{ secrets.MAX_SESSIONS }}

            
                EOF

            # Step 3: Build and Tag Docker Image
            - name: Build and Tag Docker Image
              run: |
                set -e
                IMAGE_URI="${{ secrets.ECR_REPOSITORY }}:latest"
                docker-compose -f docker-compose.yml build
                docker tag fastapi_chat $IMAGE_URI 
              env:
                AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
                ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}

            #Push docker Image
            - name: Build and Push Docker Image
              env:
                ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
                IMAGE_TAG: latest
              run: |
                IMAGE_URI="$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
                docker build -t $IMAGE_URI .
                docker push $IMAGE_URI

    